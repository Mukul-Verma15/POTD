 int n=arr.size(), m=arr[0].size();
        
        int maxi=arr[0][0];
        
        priority_queue<pair<int, pair<int, int>>, 
        vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>>pq;
        
        for(int i=0; i<n; i++){
            pq.push({arr[i][0], {i, 0}});
            maxi=max(maxi, arr[i][0]);
        }
        
        vector<int>ans={0, INT_MAX};
        
        while(!pq.empty()){
            auto &it=pq.top();
            int val=it.first;
            int r=it.second.first;
            int c=it.second.second;
            pq.pop();
            
            int range=maxi-val;
            int old_range=ans[1]-ans[0];
            if(range<old_range || (range==old_range && ans[0]>val)){
                ans[0]=val;
                ans[1]=maxi;
            }
            
            if(c+1<m){
                int x=arr[r][c+1];
                maxi=max(maxi, x);
                pq.push({x, {r, c+1}});
            }else break;
        }
        return ans;
